{"version":3,"sources":["functions/verify.js","components/LogOut.js","components/Navbar.js","functions/postCalls.js","components/PostInput.js","components/Options.js","functions/formatDate.js","components/PostItem.js","components/PostList.js","components/Home.js","functions/commentCalls.js","components/CommentInput.js","components/CommentItem.js","components/CommentList.js","components/PostPage.js","components/PostEdit.js","functions/userCalls.js","components/SignUp.js","components/LogIn.js","components/EditComment.js","components/Router.js","App.js","index.js"],"names":["verifySession","localStorage","length","token","JSON","parse","getItem","exp","jwt_decode","Date","now","clear","err","console","log","LogOut","history","useHistory","logOutButton","onClick","push","window","location","reload","Navbar","session","className","to","urlApi","getPostList","a","fetch","method","headers","response","json","data","Object","values","getUnpublishedList","id","user","_id","getPost","updatePost","body","stringify","deletePost","createPost","PostInput","useState","title","setTitle","text","setText","submitData","e","isPublished","preventDefault","timestamp","toLocaleString","published","type","name","placeholder","value","required","maxLength","onChange","target","Options","props","post","deleteFunction","refLink","userId","deleteButton","editButton","dateFormat","dateStr","aux","split","join","PostItem","useLink","postDate","formatDate","deleteData","username","PostList","posts","setPosts","getData","useEffect","sort","b","fetchData","map","Home","createComment","deleteComment","updateComment","comment","getComment","comment_detail","CommentInput","useParams","onSubmit","CommentItem","CommentList","comments","PostPage","setPost","setComments","post_detail","post_comments","PostEdit","defaultValue","signUpCall","logInCall","status","setItem","SignUp","setUsername","password","setPassword","confirm","setConfirm","LogIn","EditComment","setComment","goBack","Router","component","path","logRequired","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1741a790.chunk.js","sourcesContent":["import jwt_decode from \"jwt-decode\";\r\n\r\nconst verifySession = () => {\r\n    if(localStorage.length > 0) {\r\n        const token = JSON.parse(localStorage.getItem('userSession')).token\r\n        try {\r\n            let {exp} = jwt_decode(token)\r\n            if (Date.now() >= exp * 1000) {\r\n                localStorage.clear();\r\n                return false;\r\n            }\r\n            return true;\r\n        } catch (err) {\r\n            console.log(err)   \r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default verifySession;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LogOut = () => {\r\n    const history = useHistory();\r\n\r\n    const closeSession = () => {\r\n        localStorage.clear()\r\n        history.push('/blog-front/');\r\n        window.location.reload();\r\n    }\r\n\r\n    const logOutButton = (localStorage.length > 0) ? <button onClick={closeSession}>Log Out</button> : null ;\r\n    \r\n    return (\r\n        <div>{logOutButton}</div>\r\n    )\r\n}\r\n\r\nexport default LogOut;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LogOut from './LogOut';\r\nimport verifySession from '../functions/verify';\r\n\r\nconst Navbar = () => {\r\n\r\n    let session = (verifySession()) ? (\r\n        <div className='session'>\r\n            <Link to={`/blog-front/unpublished/:id`}>\r\n                <button>Unpublished Posts</button>\r\n            </Link>\r\n            <LogOut/>\r\n        </div>\r\n    ) : (\r\n        <div className='session'>\r\n            <Link to={`/blog-front/signup`}>\r\n                <button>Sign Up</button>\r\n            </Link>\r\n            <Link to={`/blog-front/login`}>\r\n                <button>Log In</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className='navbar'>\r\n            <Link to={'/blog-front/'}>\r\n                <button>Home</button>\r\n            </Link>\r\n            {session}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","const urlApi = 'https://afternoon-hollows-49383.herokuapp.com/';\r\n\r\nexport const getPostList = async () => {\r\n    try {\r\n        const response = await fetch(urlApi + 'api/posts', {\r\n            method: 'GET',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n        })\r\n        const data = await response.json();\r\n        return Object.values(data);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const getUnpublishedList = async () => {\r\n    try {\r\n        const id = JSON.parse(localStorage.getItem('userSession')).user._id\r\n        const response = await fetch(urlApi + 'api/unpublished/' + id, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": 'Bearer ' + JSON.parse(localStorage.getItem('userSession')).token\r\n            },\r\n        })\r\n        const data = await response.json();\r\n        return Object.values(data);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const getPost = async (id) => {\r\n    try {\r\n        const response = await fetch(urlApi + 'api/posts/' + id, {\r\n            method: 'GET',\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        })\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const updatePost = async (body, id) => {\r\n    try {\r\n        await fetch(urlApi + 'api/posts/edit/'+ id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": 'Bearer ' + JSON.parse(localStorage.getItem('userSession')).token\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport const deletePost = async (id) => {\r\n    try {\r\n        await fetch(urlApi + 'api/posts/:' + id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": 'Bearer ' + JSON.parse(localStorage.getItem('userSession')).token\r\n            },\r\n            body: JSON.stringify({id})\r\n        });\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport const createPost = async (body) => {\r\n    try {\r\n        await fetch(urlApi + 'api/posts', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": 'Bearer ' + JSON.parse(localStorage.getItem('userSession')).token\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n        window.location.reload();\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport verifySession from '../functions/verify';\r\nimport { createPost } from '../functions/postCalls';\r\n\r\nconst PostInput = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [text, setText] = useState('');\r\n\r\n    const submitData = async (e, isPublished) => {\r\n        e.preventDefault();\r\n        const user = JSON.parse(localStorage.getItem('userSession')).user._id;\r\n        const timestamp = new Date().toLocaleString();\r\n        const body = {title, text, user, timestamp, published: isPublished}\r\n        await createPost(body);\r\n    }\r\n\r\n    if (verifySession()) {\r\n        return (\r\n            <div className={'post-input'}>\r\n                <h1>Share your thoughts!</h1>\r\n                <form >\r\n                    <label>Title</label>\r\n                    <input\r\n                        type='text'\r\n                        name='title'\r\n                        placeholder= 'Title'\r\n                        value={title}\r\n                        required={true}\r\n                        maxLength={20}\r\n                        onChange={e => setTitle(e.target.value)}\r\n                    />\r\n                    <label>Text</label>\r\n                    <textarea \r\n                        name='text'\r\n                        placeholder= 'Text'\r\n                        value={text}\r\n                        required={true}\r\n                        maxLength={200}\r\n                        onChange={e => setText(e.target.value)}\r\n                    />\r\n                    <div>\r\n                        <button onClick={(e) =>submitData(e, false)}>Save as Unpublished</button>\r\n                        <button onClick={(e)=> submitData(e, true)}>Publish post</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default PostInput;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Options = (props) => {\r\n    const {post, deleteFunction, refLink} = props;\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        deleteFunction(e);\r\n    }\r\n\r\n    const userId = (localStorage.length > 0) ? JSON.parse(localStorage.getItem('userSession')).user._id : null;\r\n    const deleteButton = (post.user._id === userId) ? <button onClick={handleDelete}>Delete</button> : null;\r\n    const editButton = (post.user._id === userId) ? <button>Edit</button> : null;\r\n\r\n    return (\r\n        <div className={'options'}>\r\n            {deleteButton}\r\n            <Link to={refLink}>\r\n                {editButton}\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Options;","const dateFormat = (dateStr) => {\r\n    let aux = dateStr.split(\"-\", 2);\r\n    return [aux[0],aux[1] ].join(\"-\");\r\n}\r\n\r\nexport default dateFormat;","import React from 'react';\r\nimport Options from './Options';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { deletePost } from '../functions/postCalls';\r\nimport formatDate from '../functions/formatDate';\r\n\r\nconst PostItem = (props) => {\r\n    const {post, useLink} = props;\r\n    const postDate = formatDate(post.timestamp);\r\n    const history = useHistory();\r\n\r\n    const deleteData = async (e) => {\r\n        e.preventDefault();\r\n        await deletePost(post._id);\r\n        (useLink) ? window.location.reload() : history.push('/');\r\n    }\r\n\r\n    const title = (useLink) ? (\r\n        <Link to={`/blog-front/posts/${post._id}`}>\r\n            <h2>{post.title}</h2>\r\n        </Link>\r\n    ) : (\r\n        <h2>{post.title}</h2>\r\n    );\r\n\r\n    return(\r\n        <div className={'post-item'}>\r\n            <div className='post-item__title'>\r\n                {title}\r\n            </div>\r\n            <div className='post-item__info'>\r\n                <span>\r\n                    <p>Posted at {postDate}, by {post.user.username}</p>\r\n                </span>\r\n            </div>\r\n            <div className='post-item__text'>\r\n                <span>\r\n                    <p> {post.text} </p>\r\n                </span>\r\n            </div>\r\n            <Options \r\n                post={post} \r\n                deleteFunction={deleteData}\r\n                refLink={`/blog-front/posts/edit/${post._id}`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostItem;","import React, {useState, useEffect} from 'react';\r\nimport PostItem from './PostItem';\r\n\r\nconst PostList = (props) => {\r\n    const [posts, setPosts] = useState([])\r\n    const {getData} = props;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let data = await getData();\r\n            data.sort((a,b) => new Date(b.timestamp) - new Date(a.timestamp))\r\n            setPosts(data);\r\n        }\r\n        fetchData();// eslint-disable-next-line \r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className='post-list'>\r\n            {posts.map(post => {\r\n                return <PostItem key={post._id} post={post} useLink={true}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList;","import React from 'react'\r\nimport PostInput from './PostInput';\r\nimport PostList from './PostList';\r\nimport { getPostList } from '../functions/postCalls';\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className={'home-page'}>\r\n            <PostInput/>\r\n            <PostList getData={getPostList}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","const urlApi = 'https://afternoon-hollows-49383.herokuapp.com/';\r\n\r\nexport const createComment = async (text, post) => {\r\n    const user = JSON.parse(localStorage.getItem('userSession')).user._id;\r\n    const timestamp = new Date().toLocaleString();\r\n    const body = {user, timestamp, text, post}\r\n    try {\r\n        await fetch( urlApi + 'api/comments', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": 'Bearer ' + JSON.parse(localStorage.getItem('userSession')).token\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport const deleteComment = async (id) => {\r\n    try {\r\n        await fetch( urlApi + 'api/comments/:' + id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": 'Bearer ' + JSON.parse(localStorage.getItem('userSession')).token\r\n            },\r\n            body: JSON.stringify({id})\r\n        })\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const updateComment = async (text, comment, id) => {\r\n    try {\r\n        const body = {text, user: comment.user, timestamp: comment.timestamp, post: comment.post}\r\n        await fetch( urlApi + 'api/comments/edit/'+ id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": 'Bearer ' + JSON.parse(localStorage.getItem('userSession')).token\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const getComment = async (id) => {\r\n    try {\r\n        const response = await fetch( urlApi + 'api/comments/' + id, {\r\n            method: 'GET',\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        })\r\n        const comment_detail = await response.json();\r\n        return comment_detail;\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport verifySession from '../functions/verify';\r\nimport { createComment } from '../functions/commentCalls';\r\n\r\nconst CommentInput = () => {\r\n    const [text, setText] = useState('');\r\n    const {id} = useParams();\r\n\r\n    const submitData = async (e) => {\r\n        e.preventDefault();\r\n        await createComment(text, id)\r\n        window.location.reload();\r\n    }\r\n\r\n    if(verifySession()) {\r\n        return (\r\n            <div className={'comment-input'}>\r\n                <form onSubmit={submitData}>\r\n                    <label>Post a comment</label>\r\n                    <textarea \r\n                        name='comment'\r\n                        placeholder= 'Comment'\r\n                        maxLength={200}\r\n                        value={text}\r\n                        onChange={e => setText(e.target.value)}\r\n                    />\r\n                    <button>OK</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default CommentInput;","import React from 'react';\r\nimport Options from './Options';\r\nimport { deleteComment } from '../functions/commentCalls';\r\n\r\nconst CommentItem = (props) => {\r\n    const {comment} = props;\r\n\r\n    const deleteData = async (e) => {\r\n        e.preventDefault();\r\n        await deleteComment(comment._id);\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className={'comment-item'}>\r\n            <div className={'comment-item__info'}>\r\n                <span>\r\n                    <p>{comment.user.username}, at {comment.timestamp}</p>\r\n                </span>\r\n            </div>\r\n            <div className={'comment-item__text'}>\r\n                <span>\r\n                    <p>{comment.text}</p>\r\n                </span>\r\n            </div>\r\n            \r\n            <Options \r\n                post={comment} \r\n                deleteFunction={deleteData}\r\n                refLink={`/blog-front/comments/edit/${comment._id}`}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentItem;","import React from 'react';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst CommentList = (props) => {\r\n    const {comments} = props;\r\n\r\n    return (\r\n        <div className={'comment-list'}>\r\n            {comments.map(comment => {\r\n                return <CommentItem key={comment._id} comment={comment}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentList;","import React, {useState, useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PostItem from './PostItem';\r\nimport CommentInput from './CommentInput';\r\nimport CommentList from './CommentList';\r\nimport { getPost } from '../functions/postCalls';\r\n\r\nconst PostPage = () => {\r\n    const [post, setPost] = useState(null)\r\n    const [comments, setComments] = useState([])\r\n    const {id} = useParams();\r\n\r\n    const getData = async () => {\r\n        const {post_detail, post_comments} = await getPost(id);\r\n        setPost(post_detail);\r\n        setComments(post_comments);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData() // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    if(post) {\r\n        return (\r\n            <div className={'post-page'}>\r\n                <PostItem post={post} useLink={false}/>\r\n                {(post.published) ? <CommentInput/> : null}\r\n                <CommentList comments={comments}/>\r\n            </div>\r\n        )   \r\n    }\r\n    return null\r\n    \r\n}\r\n\r\nexport default PostPage;","import React, {useState, useEffect} from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { getPost, updatePost } from '../functions/postCalls';\r\n\r\nconst PostEdit = () => {\r\n    const [post, setPost] = useState(null)\r\n    const {id} = useParams();\r\n    const [title, setTitle] = useState('');\r\n    const [text, setText] = useState('');\r\n    const history = useHistory();\r\n\r\n    const getData = async () => {\r\n        const {post_detail} = await getPost(id);\r\n        setPost(post_detail);\r\n        setTitle(post_detail.title);\r\n        setText(post_detail.text);\r\n    };\r\n\r\n    const submitData = async (e, isPublished) => {\r\n        e.preventDefault();\r\n        const body = {title, text, user: post.user, timestamp: post.timestamp, published: isPublished}\r\n        await updatePost(body, id);\r\n        history.push('/blog-front/');\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    if(post) {\r\n        return (\r\n            <div className={'post-input'} id={'post-edit'}>\r\n                <form >\r\n                    <label>Title</label>\r\n                    <input\r\n                        type='text'\r\n                        name='title'\r\n                        defaultValue={post.title}\r\n                        required={true}\r\n                        maxLength={20}\r\n                        onChange={e => setTitle(e.target.value)}\r\n                    />\r\n                    <label>Text</label>\r\n                    <textarea \r\n                        name='text'\r\n                        defaultValue={post.text}\r\n                        required={true}\r\n                        maxLength={200}\r\n                        onChange={e => setText(e.target.value)}\r\n                    />\r\n                    <div>\r\n                        <button onClick={(e) =>submitData(e, false)}>Save as Unpublished</button>\r\n                        <button onClick={(e)=> submitData(e, true)}>Publish post</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default PostEdit;","const urlApi = 'https://afternoon-hollows-49383.herokuapp.com/';\r\n\r\nexport const signUpCall = async (body) => {\r\n    try {\r\n        await fetch( urlApi + 'api/signup', {\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(body)\r\n        })\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport const logInCall = async (body) => {\r\n    try {\r\n        const response = await fetch( urlApi + 'api/login', {\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(body)\r\n        })\r\n        if(response.status === 200) {\r\n            const data = await response.json();\r\n            const {user, token} = data;\r\n            localStorage.setItem('userSession', JSON.stringify({user, token}))\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { signUpCall } from '../functions/userCalls';\r\n\r\nconst SignUp = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirm, setConfirm] = useState('');\r\n    const history = useHistory();\r\n\r\n    const submitData = async (e) => {\r\n        e.preventDefault();\r\n        if(password === confirm) {\r\n            const body = {username, password}\r\n            await signUpCall(body)\r\n            history.push('/blog-front/login')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'session-form'}>\r\n            <h1>Sign Up</h1>\r\n            <form onSubmit={submitData}>\r\n                <label>Username</label>\r\n                <input\r\n                    type='text'\r\n                    name='username'\r\n                    placeholder= 'username'\r\n                    value={username}\r\n                    required={true}\r\n                    maxLength={20}\r\n                    onChange={e => setUsername(e.target.value)}\r\n                />\r\n                <label>Password</label>\r\n                <input\r\n                    type='password'\r\n                    name='password'\r\n                    placeholder= 'password'\r\n                    value={password}\r\n                    required={true}\r\n                    maxLength={50}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                />\r\n                <label>Confirm password</label>\r\n                <input\r\n                    type='password'\r\n                    name='confirm'\r\n                    placeholder= 'Confirm password'\r\n                    value={confirm}\r\n                    required={true}\r\n                    maxLength={50}\r\n                    onChange={e => setConfirm(e.target.value)}\r\n                />\r\n                <button>Sign Up</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React, { useState } from 'react'\r\nimport { useHistory} from 'react-router-dom';\r\nimport { logInCall } from '../functions/userCalls';\r\nimport verifySession from '../functions/verify';\r\n\r\nconst LogIn = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory();\r\n\r\n    const submitData = async (e) => {\r\n        e.preventDefault();\r\n        const body = {username, password}\r\n        await logInCall(body);\r\n        if(verifySession()) {\r\n            history.push('/blog-front/');\r\n        }\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className={'session-form'}>\r\n            <h1>Log In</h1>\r\n            <form onSubmit={submitData}>\r\n                <label>Username</label>\r\n                <input\r\n                    type='text'\r\n                    name='username'\r\n                    placeholder= 'username'\r\n                    value={username}\r\n                    required={true}\r\n                    maxLength={20}\r\n                    onChange={e => setUsername(e.target.value)}\r\n                />\r\n                <label>Password</label>\r\n                <input\r\n                    type='password'\r\n                    name='password'\r\n                    placeholder= 'password'\r\n                    value={password}\r\n                    required={true}\r\n                    maxLength={50}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                />\r\n                <button>Log In</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogIn;","import React, {useState, useEffect} from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { updateComment, getComment } from '../functions/commentCalls';\r\n\r\nconst EditComment = () => {\r\n    const [comment, setComment] = useState(null)\r\n    const {id} = useParams();\r\n    const [text, setText] = useState('');\r\n    const history = useHistory();\r\n\r\n    const getData = async () => {\r\n        let comment_detail = await getComment(id);\r\n        setComment(comment_detail);\r\n        setText(comment_detail.text);\r\n    };\r\n\r\n    const submitData = async (e) => {\r\n        e.preventDefault();\r\n        await updateComment(text, comment, id);\r\n        history.goBack();\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    if(comment) {\r\n        return (\r\n            <div className={'comment-page'}>\r\n                <div className={'comment-input'}>\r\n                    <form >\r\n                        <label>Edit your comment</label>\r\n                        <textarea \r\n                            name='text'\r\n                            defaultValue={comment.text}\r\n                            maxLength={200}\r\n                            onChange={e => setText(e.target.value)}\r\n                        />\r\n                        <button onClick={(e) =>submitData(e)}>Save</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n}\r\n\r\nexport default EditComment;","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport verifySession from '../functions/verify';\r\n\r\nconst Router = (props) => {\r\n    const { component, path, logRequired} = props;\r\n\r\n    return (\r\n        <Route exact path={path}>\r\n            {verifySession() === logRequired ? component : <Redirect to='/blog-front/'/>}\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default Router;","import './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport verifySession from './functions/verify';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport PostPage from './components/PostPage'\nimport PostEdit from './components/PostEdit';\nimport SignUp from './components/SignUp';\nimport LogIn from './components/LogIn';\nimport EditComment from './components/EditComment';\nimport PostList from './components/PostList';\nimport { getUnpublishedList } from './functions/postCalls';\nimport Router from './components/Router'\n\nfunction App() {\n  verifySession();\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar/>\n        <Switch>\n          <Router path={'/blog-front/signup'} component={<SignUp/>} logRequired={false}/>\n          <Router path={'/blog-front/login'} component={<LogIn/>} logRequired={false}/>\n          <Route exact path={'/blog-front/posts/:id'}>\n            <PostPage/>\n          </Route>\n          <Router path={'/blog-front/posts/edit/:id'} component={<PostEdit/>} logRequired={true}/>\n          <Router path={'/blog-front/unpublished/:id'} component={<PostList getData={getUnpublishedList}/>} logRequired={true}/>\n          <Router path={'/blog-front/comments/edit/:id'} component={<EditComment/>} logRequired={true}/>\n          <Route path=\"/blog-front/\"> \n            <Home/>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}